Teste de integração
Vamos usar "Servidor a parti" com um banco de dados separado do banco principal da aplicação
{
    
Surper Test -> Usado para simular os requests simular como se fosse outro servidor so para teste
    Super Test -> yarn add supertest @types/supertest -D

    -> jest =  yarn add jest @types/jest -D
    -> jest =  yarn jest --init
    -> jest =  yarn add ts-jest -D //Tabalhar com Typescript

    packend.json(para usar banco de dados separado e talvez usa para server tbm ainda não sei vamos descobrir)
    {
            "test": "NODE_ENV=test jest"
    }

    -> APOS CONFIGURAR, PARA RODAR DIGITE: yarn test
    {
        √ Would you like to use Jest when running "test" script in "package.json"? ... yes
        √ Would you like to use Typescript for the configuration file? ... yes
        √ Choose the test environment that will be used for testing » node
        √ Do you want Jest to add coverage reports? ... no
        √ Which provider should be used to instrument code for coverage? » v8
        √ Automatically clear mock calls and instances between every test? ... yes
    }

    -> jest = jest.config.ts 
    MUDANDO ALGUMAS CONFIGS
    {
        bail: true, //Pq assim se um teste der erro ele não continua os testes
        ...
        preset: "ts-jest", //PARA TRABALHAR COM Typescript
        ...
        //testEnvironment: "node" //Não sei pq comentar essa linha ;-; "Por enquanto"
        ...
        testMatch é o caminho de onde vai ta os teste
        testMatch: [
            "**/__tests__/*.test.ts" //Dizendo que ele vai pegar todos arquivos da pasta __tests__ com final test.ts na pasta test
        ]
    }

    CODIGO DEFAULT PARA TESTA SE TA TUDO CONFIGURADO CERTO


    caminho do arquivo e a pasta

    __tests__/First.test.ts -->

        describe("First", () => {
            
            it(">> Deve ser possivel somar 2 numeros e retornar 4", () => {
                expect(2 + 2).toBe(4);
            });

            it(">> Deve ser possivel somar 2 numeros e não retornar 5", () => {
                expect(2 + 2).not.toBe(5);
            });

        })
    
}

Surper Test 
        yarn add supertest @types/supertest -D